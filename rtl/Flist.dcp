// ========== Copyright Header Begin ============================================
// Copyright (c) 2020 Princeton University
// All rights reserved.
// 
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above copyright
//       notice, this list of conditions and the following disclaimer in the
//       documentation and/or other materials provided with the distribution.
//     * Neither the name of Princeton University nor the
//       names of its contributors may be used to endorse or promote products
//       derived from this software without specific prior written permission.
// 
// THIS SOFTWARE IS PROVIDED BY PRINCETON UNIVERSITY "AS IS" AND
// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL PRINCETON UNIVERSITY BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
// ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// ========== Copyright Header End ============================================

// Produce/Consume pipelines for decoupling
maple.sv

// Control logic for the fifos
dcp_fifo_ctrl.v

// LIMA unit
dcp_chunk_req.v
sram_chunk_data.v

// Includes the configuration pipeline and wraps the above units
dcp_pipe.sv


// Encoder/Decoders for the Openpiton protocol
dcp_nocbuffer_dec.v
dcp_noc1decoder.v
dcp_nocdecoder.v

dcp_noc1encoder.v
dcp_noc1buffer.v
dcp_noc2encoder.v
dcp_noc2buffer.v


// DCP wraps dcp_pipe and the encoder/decoders
dcp.v


// MMU files
io_mmu.sv
io_tlb.sv
io_ptw.sv


// Wrapper of DCP and MMU
is_core.v


// Optional interface to insert another functional unit inside of dcp_pipe
// which can be configured by extending MAPLE's API
tight_acc_iface.sv
custom_acc.sv

// Common RTL blocks
fifo_buffer.v
rr_arbiter.v